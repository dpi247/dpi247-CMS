<?php 
/**
 * @author NMO
 *
 * check : http://ygerasimov.com/ctools-plugins-system
 *
 */
 
module_load_include ( 'php', 'dpisocial', 'dpisocial.api' );

/**
 * Implementation of hook_menu()
 */
function dpisocial_menu() {
  $items = array();
  
  $items ['admin/dpi247/dpisocial'] = array (
    'title' => 'DPI Social',
    'description' => 'Settings for interactions with social networks.',
    'page callback' => 'dpisocial_listplugin',
    'access arguments' => array (
      'administer dpiunivers' 
    ),
    'file' => 'dpisocial.pages.view.inc',
    'file path' => drupal_get_path ( 'module', 'dpisocial' ) . '/includes' 
  );
  
  ctools_include('plugins');
  $social_network = ctools_get_plugins('dpisocial', 'social_network');
  
  foreach ($social_network as $snetwork) {
	  $items['admin/dpi247/dpisocial/'.$snetwork['type']] = array (
		'title' => $snetwork['label'],
		'page callback' => 'dpisocial_adminplugin',
		'access callback' => TRUE,
		'page arguments' => array($snetwork['type']),
		'access arguments' => array (
		  'administer dpisocial' 
		), 
		'type'	=> MENU_LOCAL_TASK,
		'file' => 'dpisocial.pages.view.inc',
		'file path' => drupal_get_path ( 'module', 'dpisocial' ) . '/includes' 
	  );	  
  }
  
  /*
  $items['admin/dpi247/dpisocial/networks'] = array (
    'title' => 'Configure social networks interaction',
    'description' => 'Configure social networks interaction.',
    'page callback' => 'dpisocial_listplugin',
    'access callback' => TRUE,
    'access arguments' => array (
      'administer dpisocial' 
    ), 
	'type'	=> MENU_DEFAULT_LOCAL_TASK,
	'weight'	=> 2,
	'file' => 'dpisocial.pages.view.inc',
    'file path' => drupal_get_path ( 'module', 'dpisocial' ) . '/includes' 
  );
  
  $items['admin/dpi247/dpisocial/test'] = array (
    'title' => 'Test',
    'page callback' => 'dpisocial_adminplugin',
    'access callback' => TRUE,
    'access arguments' => array (
      'administer dpisocial' 
    ), 
	'type'	=> MENU_DEFAULT_LOCAL_TASK,
	'weight'	=> 1,
	'file' => 'dpisocial.pages.view.inc',
    'file path' => drupal_get_path ( 'module', 'dpisocial' ) . '/includes' 
  );
  */
  /*
  $items['admin/dpi247/dpisocial/networks/%'] = array (
    'title' => 'Configure social network',
    'description' => 'Configure social network.',
    'page callback' => 'dpisocial_adminplugin',
    'access callback' => TRUE,
	'page arguments' => array(4),
    'access arguments' => array (
      'administer dpisocial' 
    ), 
	'file' => 'dpisocial.pages.view.inc',
    'file path' => drupal_get_path ( 'module', 'dpisocial' ) . '/includes' 
  );
  */
  $items['shares_callback/%'] = array( 
    'page callback' => 'dpisocial_shareinitiated', 
    'access arguments' => array('access content'),
  	'page arguments' => array(1)
  );
  
  return $items;
}

/**
 * Implements hook_ctools_plugin_type().
 *
 * Has plenty options. See ctools/help/plugins-creating.html
 */
function dpisocial_ctools_plugin_type() {
  return array(
    'social_network' => array(
      'use hooks' => TRUE,
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 */
 
function dpisocial_ctools_plugin_directory($module, $plugin) {
  if (($module == 'dpisocial') && ($plugin == 'social_network')) {
    return 'plugins';
  }
}

function dpisocial_getListActions() {
	$actions = array(
		'share_comment',
		'share_article'
	);	
	
	drupal_alter('dpisocial_list_actions', $actions);
	
	return $actions;	
}

function social_network_settings_form($form, &$form_state) {
	
	$class = $form_state['build_info']['args'][0]['class'];
	
	$nclass = new $class;
	
	$form['social_network_in_use']= array(
		'#title' => t('Utiliser ce réseau sur le site'),
		'#type' => 'checkbox',
		'#default_value'=>$nclass->isNetworkInUse()
	);
	
	$form += $nclass->configForm();
	
	  $form['submit'] = array (
		'#type' => 'submit',
		'#value' => t ( 'Save' ) 
	  );
	
	return $form;
}

function social_network_settings_form_submit($form, &$form_state) {
	
	$class = $form_state['build_info']['args'][0]['class'];
	
	$nclass = new $class;
	
	//sauvegarde l'activation du réseau
	$nclass->setNetworkInUse($form_state['values']['social_network_in_use']);
	
	$nclass->saveConfigForm($form_state);
	
}

function dpisocial_shareinitiated($nid) {
	if(!empty($_GET['url']) && !empty($_GET['network'])){
		
		$parts = explode(' ',$_GET['network']);
		$network = $parts[0]; // get rid of something after domain
		
		$parts = explode(' ',$_GET['url']);
		$url = $parts[0]; // get rid of something after domain
		db_query("INSERT INTO dpisocial_node_shares_to_update SET nid=".$nid.", url = '".$url."', network='".$network."'");	
	}
}

/**
 * Implementation of hook_permission
 *
 * @return multitype:array
 */
function dpisocial_permission() {
  return array (
    'administer dpisocial' => array (
      'title' => t ( 'Administer dpisocial' ),
      'description' => t ( 'Perform administration tasks for dpisocial module.' ) 
    ) 
  );
}

function dpisocial_page_alter(&$page) {
  ctools_include('plugins');
  $social_network = ctools_get_plugins('dpisocial', 'social_network');
  
  foreach ($social_network as $snetwork) {
	 $class = $snetwork['handler']['class'];
	 $nclass = new $class();
	 
	 if ($nclass->isNetworkInUse()) {
		 $html = $nclass->getSocialHTML();
		  
		 if ($html!=NULL) {
			$page['content']['dpisocial'][$nclass->whoAmI] = $html;	 
		 }
		 
		 $js = $nclass->getSocialJS();
		 
		 if ($js!=NULL) {
			foreach($js as $s) {
				drupal_add_js($s['script'],array('type'=>$s['type'], 'scope'=>$s['scope']));
			}
		 }
	 }
  }
}

function dpisocial_form_comment_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'dpisocial_form_comment_form_submit';	
	
  ctools_include('plugins');
  $social_network = ctools_get_plugins('dpisocial', 'social_network');
  
  foreach ($social_network as $snetwork) {
	  $class = $snetwork['handler']['class'];
	  $nclass = new $class();
	  
	  if (($nclass->isNetworkInUse()) && ($nclass->isActionActivated('share_comment'))) {
		  $nclass->addCheckboxShareComment($form);
	  }
	 
  } 	
}

function dpisocial_form_comment_form_submit(&$form, &$form_state, $form_id) {
	// check de dpisocial_facebook_share_comment
	if ($form_state['values']['dpisocial_facebook_share_comment']==1) {
		if ($form_state['redirect']==NULL) {
			$url = current_path();
			$query['share_comment']=1;
			$form_state['redirect'] = array($url, array('query'=>$query));
		} else {
			if (empty($form_state['redirect'][1]['query'])) $form_state['redirect'][1]['query'] = array('share_comment'=>1);
			else $form_state['redirect'][1]['query']['share_comment']=1;
		}
	}
}

function dpisocial_field_extra_fields() {

  $extrafield_name_share_article = 'dpisocial_share';
  $extrafield_name_mail_article = 'dpisocial_mail';
  $extrafield_name_print_article = 'dpisocial_print';

  foreach (array('page', 'article','package') as $node_type) {
	
    $extra['node'][$node_type]['display'][$extrafield_name_share_article] = array(

      'label' => t('DPI Social Boutons de partage'),

      'description' => t('Les boutons de partage sur les différents réseaux sociaux.'),

      'weight' => 50, // default weight, can be changed on display form by site-builder.

    );
	
	$extra['node'][$node_type]['display'][$extrafield_name_mail_article] = array(

      'label' => t('DPI Social Partage par email'),

      'description' => t('Le bouton de partage par email.'),

      'weight' => 50, // default weight, can be changed on display form by site-builder.

    );
	
	$extra['node'][$node_type]['display'][$extrafield_name_print_article] = array(

      'label' => t('DPI Social Boutons d\'impression'),

      'description' => t('Le boutons d\'impression.'),

      'weight' => 50, // default weight, can be changed on display form by site-builder.

    );
	
	/*
	ctools_include('plugins');
	  $social_network = ctools_get_plugins('dpisocial', 'social_network');
	  
	  foreach ($social_network as $snetwork) {
		  $class = $snetwork['handler']['class'];
		  $nclass = new $class();
		  $extra['node'][$node_type]['display']['dpisocial_share_'.$class] = array(

			  'label' => t('DPI Social Bouton de partage '.$nclass->whoAmI),
		
			  'description' => t('Les boutons de partage sur les différents réseaux sociaux.'),
		
			  'weight' => 50, // default weight, can be changed on display form by site-builder.
		
			);
	  }
	  */

  }

  return $extra;

 }
 
 function dpisocial_cmp_share_buttons($b1, $b2) {
	if ($b1['pos'] == $b2['pos']) {
        return 0;
    }
    return ($b1['pos'] < $b2['pos']) ? -1 : 1; 
 }
 
 function dpisocial_node_view($node, $view_mode, $langcode) {
	 
  global $base_url;

  $extrafields = field_extra_fields_get_display('node', $node->type, $view_mode);
  
  $urlToShare = $base_url.'/node/'.$node->nid; // lien 'systeme'
  //$urlToShare = 'http://www.sudinfo.be/1178952/article/2014-12-29/les-occupants-du-ferry-norman-atlantic-dont-les-trois-belges-sont-sauves-cinq-de';

  $extrafield_name_share_article = 'dpisocial_share';
  $extrafield_name_mail_article = 'dpisocial_mail';
  $extrafield_name_print_article = 'dpisocial_print';
  
  $isShare = false;
  

  if (isset($extrafields[$extrafield_name_share_article])

      && isset($extrafields[$extrafield_name_share_article]['visible'])

      && $extrafields[$extrafield_name_share_article]['visible']) {
 
	  ctools_include('plugins');
	  $social_network = ctools_get_plugins('dpisocial', 'social_network');
	  
	  $buttons = array();
		 
	  foreach ($social_network as $snetwork) {
		 $class = $snetwork['handler']['class'];
		  
		  $nclass = new $class();
		  
		  if (($nclass->isNetworkInUse()) && ($nclass->isActionActivated('share_article'))) {
			  
			  $buttons[] = array(
				'html' => $nclass->getShareButtonHtml($node->nid, $urlToShare),
				'pos'  => dpi_variable_get($nclass->whoAmI.'_share_article_position', 0)
			  );
			  
			  //$content.= $nclass->getShareButtonHtml($urlToShare);
			  
			  $isShare = true;
		  }
	 
		}
	  }
	  
	  usort($buttons, "dpisocial_cmp_share_buttons");
	  
	  $content='';
	  
	  foreach ($buttons as $b) $content.=$b['html'];
	  
	  $node->content[$extrafield_name_share_article] = array('#markup' => $content);
	  
	  if ($isShare) {
			$js = '
				function dpisocial_share_this(url, network) {
					window.open(url, network,"width=550, height=300");
					$.get( "/shares_callback/'.$node->nid.'?network="+network+"&url="+encodeURI(url));
				}
			';
			drupal_add_js($js, 'inline');  
	  }
	  
	 if (isset($extrafields[$extrafield_name_mail_article])

      && isset($extrafields[$extrafield_name_mail_article]['visible'])

      && $extrafields[$extrafield_name_mail_article]['visible']) {
		  
		$content = '<button class="btn btn-social btn-linkedin" type="button"><i class="fa fa-envelope-o"></i><span class="label">Email</span></button>';
		
		$node->content[$extrafield_name_mail_article] = array('#markup' => $content);		  
	 
	 }
	 
	 if (isset($extrafields[$extrafield_name_print_article])

      && isset($extrafields[$extrafield_name_print_article]['visible'])

      && $extrafields[$extrafield_name_print_article]['visible']) {
		  
		$content = '<button class="btn btn-social btn-linkedin" type="button"><i class="fa fa-print"></i><span class="label">Imprimer</span></button>';
		
		$node->content[$extrafield_name_print_article] = array('#markup' => $content);		  
	 
	 }
	 // 

}

function dpisocial_cron() {
  $networks = array();	
	
  ctools_include('plugins');
  $social_network = ctools_get_plugins('dpisocial', 'social_network');
  
  foreach ($social_network as $snetwork) {
		 $class = $snetwork['handler']['class'];
		  
		 $nclass = new $class();
		  
		 $networks[$nclass->whoAmI] = $nclass;
  }
  
  $query = "SELECT nid, url, network FROM dpisocial_node_shares_to_update";
  $result = db_query($query);
  
  foreach ($result as $row) {
	$nbShares = $networks[$row->network]->apiGetNbShares($row->url);
	
	$query = "INSERT INTO dpisocial_node_nbshares SET nid=".$row->nid.", network='".$row->network."', nbshares=".$nbShares."
				ON DUPLICATE KEY UPDATE nbshares =".$nbShares;
	db_query($query);
	$query = "DELETE FROM dpisocial_node_shares_to_update WHERE nid=".$row->nid." AND network='".$row->network."'";
	db_query($query);
}
  
}
