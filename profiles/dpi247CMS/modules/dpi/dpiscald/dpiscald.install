<?php
/**
 * @file
 * Scald Images Installation
 */

/**
 * Implements hook_install().
 */
function dpiscald_install() {
  //Add basic types if not exist
  scald_add_type('image', 'Image', 'Image');
  scald_add_type('audio', 'Audio', 'Audio');
  scald_add_type('video', 'Video', 'Video');
  //Image
  scald_add_type('flickr', 'Flickr', 'Resource flickr');
  //Audio
  scald_add_type('soundcloud', 'Soundcloud', 'Resource soundcloud');
  //Video
  scald_add_type('youtube', 'Youtube', 'Resource youtube');
  scald_add_type('dailymotion', 'Dailymotion', 'Resource dailymotion');
  scald_add_type('vimeo', 'Vimeo', 'Resource Vimeo');
  scald_add_type('embedly', 'Embedly', 'Embedly media');
  scald_add_type('kewego', 'Kewego', 'Resource Kewego');
  scald_add_type('equipefr', 'Equipe.fr', 'Resource Equipe.fr');
  //Rich
  scald_add_type('twitter', 'Twitter', 'Resource twitter');
  scald_add_type('googlemap', 'Google Maps', 'Resource Google Maps');
  scald_add_type('storify', 'Storify', 'Resource Storify');
  scald_add_type('timelinejs', 'Timeline Js', 'Resource Timeline Js');
  scald_add_type('picktochart', 'Picktochart', 'Resource Picktochart');
  scald_add_type('scribblelive', 'Scribblelive', 'Resource Scribblelive');
  scald_add_type('spotify', 'Spotify', 'Resource Spotify');
  scald_add_type('deezer', 'Deezer', 'Resource Deezer');
  scald_add_type('videortl', 'Video RTL', 'Resource Video RTL');
  scald_add_type('facebook_status', 'Facebook status', 'Resource Facebook status');
  scald_add_type('infogram', 'Infogram', 'Resource Infogram');
  scald_add_type('slideshare', 'Slideshare', 'Resource Slideshare');
  scald_add_type('idalgo', 'Idalgo', 'Resource Idalgo');
  
  //Changer le provider par defaut des types créés, ci-dessus via le module scald, de "scald" à "dpiscald".
  $providers = array('flickr', 'soundcloud', 'youtube', 'dailymotion', 'vimeo', 'twitter', 'equipefr', 'kewego', 'googlemap',
       'embedly', 'storify', 'timelinejs', 'coveritlive', 'picktochart', 'scribblelive', 'spotify', 'deezer', 'videortl', 'facebook_status', 'infogram', 'slideshare');
  $requete='UPDATE {scald_types} SET provider=\'dpiscald\' where ';
  foreach($providers as $provider){
  	$requete.='type = \''.$provider.'\' OR ';
  }
  $requete.=' false';
  db_query ( $requete );
  
  $sql = "UPDATE {system}
          SET weight = '-1'
          WHERE name = 'dpiscald'";
  db_query($sql);

  // copy the default FB thumbnail icon if it does not exist
  $thumbpath = drupal_get_path('module', 'dpiscald') . '/providers/facebook_status/icons/facebook_status.png';
  _create_default_dpiscald_thumbnail($thumbpath, 'png', 'facebook_status');
  
  //copy the default infogram thumbnail icon if it does not exist
  $thumbpath = drupal_get_path('module', 'dpiscald') . '/providers/infogram/icons/infogram.png';
  _create_default_dpiscald_thumbnail($thumbpath, 'png', 'infogram');

    //copy the default infogram thumbnail icon if it does not exist
  $thumbpath = drupal_get_path('module', 'dpiscald') . '/providers/idalgo/icons/idalgo.png';
  _create_default_dpiscald_thumbnail($thumbpath, 'png', 'idalgo');
}

/**
 * This function create the default thumbnails
 * File are in public://atoms folder
 */
function _create_default_dpiscald_thumbnail($file_path, $format, $provider) {
  $default_thumbnail_source = 'public://atoms/'.$provider.'.'.$format;
  if (!file_exists($default_thumbnail_source)) {
    // file_unmanaged_copy() does not create new directory, so it is necessary to create it before.
    $directory = dirname($default_thumbnail_source);
    file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
    file_unmanaged_copy($file_path, $default_thumbnail_source);

    global $base_url;
    $url = $base_url.'/'.$file_path;
    $img = drupal_http_request($url);
    if ($img && file_prepare_directory($directory, FILE_CREATE_DIRECTORY)) {
      $file = file_save_data($img->data, 'public://atoms/'.$provider.'.'.$format, FILE_EXISTS_REPLACE);

      if ($file) {
        // Set the file status to temporary.
        $query = db_update('file_managed')
          ->condition('fid', $file->fid)
          ->fields(array('status' => 0))
          ->execute();
      }
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function dpiscald_uninstall() {
  drupal_load('module', 'dpiscald');
  scald_remove_type('image');
  scald_remove_type('audio');
  scald_remove_type('video');
  //Image
  scald_remove_type('flickr');
  //Video
  scald_remove_type('soundcloud');
  //Video
  scald_remove_type('youtube');
  scald_remove_type('dailymotion');
  scald_remove_type('vimeo');
  scald_remove_type('kewego');
  scald_remove_type('equipefr');
  //Rich
  scald_remove_type('twitter');
  scald_remove_type('googlemap');
  scald_remove_type('embedly');
  scald_remove_type('storify');
  scald_remove_type('timelinejs');  
  scald_remove_type('picktochart');
  scald_remove_type('scribblelive');
  scald_remove_type('spotify');
  scald_remove_type('deezer');
  scald_remove_type('videortl');
  scald_remove_type('facebook_status');
  scald_remove_type('infogram');
  scald_remove_type('slideshare');
  scald_remove_type('idalgo');
}

/**
 * Implements hook_enable().
 */
function dpiscald_enable() {
  drupal_set_message(t('To see the list of supported providers for embed.ly,  go to : <a href="@url">@url</a>', array('@url' => 'http://embed.ly/providers')));
}

/**
 * Update from 0.1
 */
function dpiscald_update_7001() {
  //Downcrease module weight to prevent compatibility issues.
    $sql = "UPDATE {system}
            SET weight = '-1'
            WHERE name = 'dpiscald'";
  db_query($sql);
}

/**
 * Suppression du provider coveritlive
 */
function dpiscald_update_7002(){
  scald_remove_type('coveritlive');
}