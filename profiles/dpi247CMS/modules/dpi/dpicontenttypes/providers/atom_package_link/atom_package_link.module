<?php 

/**
 * Implements hook_scald_atom_providers().
 * Tell Scald that we'll be providing some video atoms.
 */
function atom_package_link_scald_atom_providers() {
  return array(
    'atom_package' => 'Atom package link provider'
  );
  // This code will never be hit, but is necessary to mark the string
  // for translation on localize.d.o
  t('Atom package link provider');
}

function atom_package_link_scald_add_form(&$form, &$form_state){
  $form["test"] = array(
    '#markup' => t("L'atom package link sera automatiquement crÃ©er lors de l'import du contenu"),
  );
  unset($form['buttons']['next']);
}

function atom_package_link_scald_add_form_fill(&$atom, $form, $form_state){
  $langcode = field_language('scald_atom', $atom, 'scald_thumbnail');
  $atom->scald_thumbnail[$langcode][0] = array('public://styles/Library/public/icon_package.png');
  $atom->scald_authors = $atom->data['author'];
}

function atom_package_link_scald_fetch($atom, $type) {
  $atom->file_source = $atom->thumbnail_source = 'public://styles/Library/public/icon_package.png';
}

function atom_package_link_scald_prerender($atom, $context, $options, $mode) {
  if ($mode == 'atom') {    
    $atom->rendered->player = scald_render($atom->data['sid'], 'full');    
  }
}