<?php
/**
 * @file
 * Code for the Unfold Companion Minimal feature.
 */

include_once 'unfoldcompanionminimal.features.inc';

module_load_include('api.inc', 'unfoldcompanionminimal');

/**
 * Implementation of hook_theme
 */
function unfoldcompanionminimal_theme() {
  $base = array(
    'path' => drupal_get_path('module', 'unfoldcompanionminimal') . '/templates',
    'file' => 'theme.inc',
  );
  
  return array(
    'field_extra_field' => $base + array(
      'variables' => array('view_mode' => '', 'fields' => array()),
      'template' => 'field-extra-field',
    ),
  );
}

/**
 * Implementation of hook_field_extra_fields
 *
 * Add the "Media box" and "Publication date and comments count" extra fields
 */
function unfoldcompanionminimal_field_extra_fields() {
  $extras = array(
    'node' => array(
      'package' => array(
        'display' => array(
          'field_mediabox' => array(
            'label' => t('Media box'),
            'description' => t('Contains some of the embedded objects'),
            'weight' => 0,
          ),
          'field_publication_comments_and_embeds_count' => array(
            'label' => t('Publication date, comments count and embeds count'),
            'description' => t('Show the publication date followed by the comments count and the various embeds counts'),
            'weight' => 0,
          ),
        ),
      ),
    ),
  );

  return $extras;
}

/**
 * Implementation of hook_node_view
 *
 * Fill the "Media box" and "Publication date, comments count and embeds count" extra fields
 */
function unfoldcompanionminimal_node_view($node, $view_mode, $langcode) {
  $extra_fields = field_info_extra_fields('node', $node->type, 'display');

  // Handle the "Media box" field
  if (isset($extra_fields['field_mediabox']['display'][$view_mode]) && $extra_fields['field_mediabox']['display'][$view_mode]['visible']) {
    switch ($view_mode) {
      case 'full':
        // All images and videos
        if ($media_box_emebeds = dpicontenttypes_api_get_embeds_view($node, $node->content, array('image', 'video'), FALSE, FALSE)) {
          foreach ($media_box_emebeds as $delta => $embed) {
            unset($node->content['field_embededobjects'][$delta]);
          }
          $node->content['field_mediabox']['#markup'] = theme('theme_package_top_items', array('topItems' => $media_box_emebeds));
        }
        break;

      case 'targetblock_big':
        // Only the first image
        if ($media_box_emebeds = dpicontenttypes_api_get_first_embed_view($node, $node->content, array('image'))) {
          foreach ($node->content['field_embededobjects'] as $delta => $embed) {
            unset($node->content['field_embededobjects'][$delta]);
          }
          $node->content['field_mediabox']['#markup'] = array_shift($media_box_emebeds);
        }
        break;

      default:
        // Only the first image, with the "top items" theming
        if ($media_box_emebeds = dpicontenttypes_api_get_first_embed_view($node, $node->content, array('image'))) {
          foreach ($node->content['field_embededobjects'] as $delta => $embed) {
            unset($node->content['field_embededobjects'][$delta]);
          }
          $node->content['field_mediabox']['#markup'] = theme('theme_package_top_items', array('topItems' => $media_box_emebeds));
        }
        break;
    }

    if (!isset($node->content['field_mediabox']['#markup'])) {
      $node->content['field_mediabox']['#markup'] = '';
    }
  }

  // Fill the "Publication date, comments count and embeds count" field
  if (isset($extra_fields['field_publication_comments_and_embeds_count']['display'][$view_mode]) && $extra_fields['field_publication_comments_and_embeds_count']['display'][$view_mode]['visible']) {
    if (unfoldcompanionminimal_api_check_date_content_not_empty($node->content, 'field_editorialupdatedate')) {
      $date = $node->content['field_editorialupdatedate'];
    } else {
      $date = $node->content['field_editorialpublicationdate'];
    }
    $template_fields = array(
      'view_mode' => $view_mode,
      'fields' => array(
        'date' => $date,
        'comment_count' => $node->comment_count,
        'embeds_count' => dpicontenttypes_api_get_embeds_count_by_type($node),
      ),
    );
    $node->content['field_publication_comments_and_embeds_count']['#markup'] = theme('field_extra_field', $template_fields);
    if (isset($node->content['field_editorialupdatedate'])) {
      unset($node->content['field_editorialupdatedate']);
    }
    if (isset($node->content['field_editorialpublicationdate'])) {
      unset($node->content['field_editorialpublicationdate']);
    }
  }
}
