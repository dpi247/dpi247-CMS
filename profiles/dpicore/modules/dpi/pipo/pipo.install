<?php 


/**
 * Implements hook_install().
 */
function pipo_install() {
  pipo_attach_field_to_target_entity();
}

function pipo_uninstall() {
  pipo_remove_field_to_target_entity();
}




function pipo_attach_field_to_target_entity(){
  
  $field_name='field_pipo';
  $entity_type='target';
  $bundle_name='target';
  
  $field = array(
    'field_name' => 'field_pipo',
    'cardinality' => 1,
    'type' => 'number_integer',
  );
  //$info_config = field_info_field($field_name);
  //$info_instance = field_info_instance($entity_type, $field_name, $bundle_name);
  
  field_create_field($field);
  
  $field_instance = array(
      'field_name' => 'field_pipo',
      'label' => 'this is an instance for field pipo',
  );
  
  // add a couple of info to the instance
  $field_instance['entity_type'] = 'target';
  $field_instance['bundle'] = 'target';
  //create the instance
  field_create_instance($field_instance);
  
}


function   pipo_remove_field_to_target_entity(){
  $field_name='field_pipo';
  
  field_delete_field($field_name);
}



function pipo_schema() {
  $schema['pipo_entity'] = array (
    'description' => 'Pipo entity Example',
    'fields' => array(
      'pid' => array(
        'description' => 'Primary key for our table of pipo',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'machine_name' => array(
        'description' => 'The machine name of the pipo',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),
    ),
    'primary key' => array('pid'),
  );
  return $schema;
}