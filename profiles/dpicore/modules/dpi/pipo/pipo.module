<?php


function pipo_entity_info(){

  $entities=array();
  $entities['pipo_entity']=array(
    'label' => t('PipoEntity'),
    // seulement si on utilise le module entity API
    //'entity class' => 'DpidestinationsTarget',
    //'controller class' => 'TargetController',
    'base table' => 'pipo_entity',
    'fieldable' => TRUE,
    'uri callback' => 'dpidestinations_target_uri',
    'label callback' => 'dpidestinations_target_label',

    'entity keys' => array(
      'id' => 'pid',
    ),
    'bundles'=>array(
      'pipo_entity2'=>array(
        
      'label' => 't',
        'admin' => array(
          'path' => 'admin/structure/pipo_entity/manage/pipo_entity2',
        'real path' => 'admin/structure/pipo_entity/manage/pipo_entity2',
        'bundle argument' => "pipo_entity2",
       ),
        'pipo_entity1'=>array(
        
          'label' => 't',
          'admin' => array(
            'path' => 'admin/structure/pipo_entity/manage/pipo_entity1',
            'real path' => 'admin/structure/pipo_entity/manage/pipo_entity1',
            'bundle argument' => "pipo_entity1",
          ),
        
      
      ),
      ),
    ),
    'view modes' => array(
      'minimal' => array(
        'label' => t('Minimal'),
        'custom settings' => FALSE,
      ),
      'full' => array(
        'label' => t('Full'),
        'custom settings' => TRUE,
      ),
    ),
    'access callback' => 'pipo_access',
    
    'admin ui' => array(
      'label' => 'ti',
      'path' => 'admin/structure/pipo',
      // OPTIONAL- See "Customize the User Interface" below if you set.
      //'file' => 'target.admin.inc',
      'controller class' => 'EntityDefaultUIController',
    ),
  );
  return $entities;


}

function pipo_access(){
  return TRUE;
}
function pipo_entity_form($form, &$form_state, $remotehtml,$op = 'edit'){
  return array();
}

function pipo_pipo_entity_uri($pipoentity){
  return array(
    'path' => 'pipo/'.$pipoentity->pid,
  );
  return array(

  );
}


function pipo_pipo_entity_label($pipo_entity){

  return "pipo entity".$pipo_entity->pid;
}


function pipo_dpicache_cache_entry_register(){
  return array(
    'pipo_render'=>array(
      'callback'=> 'pipo_get_render',
      'cache_mechanism'=> 'database',
      'cache_prefix'=> 'pipo_render',
      "data_type" => "string",
      'time_window' => 3,
      'default_ttl'=> 1
    ),
    'pipo_array'=>array(
      'callback'=> 'pipo_get_array',
      'cache_mechanism'=> 'memcache',
      'cache_prefix'=> 'pipo_array',
      "data_type" => "array",
      'time_window' => 24,
      'default_ttl'=> 5
    )
    
    );
  
  
}

function pipo_dpilog_register(){
  return array(
    "cache_entry"=>array(
      "actions"=>array("pipo_log"),
    ),
    "cache_error"=>array(
      "actions"=>array("pipo_error"),
    ),
  );
}

function pipo_get_render($param1,$param2,$param3){
  dsm('hello je passe par pipo_get_render');
  dsm($param2);
  return $param1." - ".$param2." - ".$param3."   date de generation: ".date("Y-m-d H:i:s");
}
function pipo_get_array($param1,$param2){
  dsm('hello je passe par pipo_get_array');
  return  array($param1,$param2,date("Y-m-d H:i:s")); 
}




function pipo_random_fonction(){
  $param1=(string) rand();
  $param2="toto";
  $param3=(string) rand();
  
  //dpicache_get_cache_entry('pipo_render',$param1,$param2,$param3);
  dpicache_get_cache_entry('pipo_render','fixe1','fixe2','fix3');
 // dpicache_get_cache_entry('pipo_array',$param1,$param2);
  
}

function pipo_test_generate_dpilogs(){
  global $user;
  //dpi_log($log_name, $action, $message, $variables=array(),$id=NULL, $severity=WATCHDOG_NOTICE, $uid=NULL, $keep_backtrace=FALSE){
  dpi_log('cache_entry', "pipo_log", "1) This is a good test ".time(), array(), NULL, WATCHDOG_INFO, $user->uid, FALSE);
  dpi_log('cache_entry', "pipo_log", "2) This is a good test ".time(), array(), NULL, WATCHDOG_INFO, $user->uid, FALSE);
  dpi_log('cache_entry', "pipo_log", "3) This is a good test ".time(), array(), NULL, WATCHDOG_INFO, $user->uid, FALSE);
  dpi_log('cache_error', "pipo_error", "This is a bad test ".time(), array(), NULL, WATCHDOG_ERROR, $user->uid, FALSE);
}