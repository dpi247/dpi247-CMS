<?php 

module_load_include('inc', 'dpilog', 'dpilog.private');

/**
 * Implementation of hook_menu
*/
function dpicommons_menu() {
  $items = array();

  $items['admin/config/dpi247'] = array(
    'title' => 'DPI247',
    'description' => 'Parent item for DPI247',
    'position' => 'left',
    'weight' => -100,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/dpi247/settings'] = array(
    'title' => 'DPI247 Settings',
    'description' => 'General settings for DPI247',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dpicommons_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'dpicommons.pages.admin.inc',
    'file path' => drupal_get_path('module', 'dpicommons').'/includes',
  );

  // Menu items that are basically just menu blocks.
  $items['admin/dpi247'] = array(
    'title' => 'dpi247',
    'description' => 'Administer dpi247 settings.',
    'position' => 'right',
    'weight' => -8,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path'=> drupal_get_path('module', 'system'),
  );  
  return $items;
}


function dpicommons_theme(){
  return array(
    'dpi_vertical_tabs' => array(
      'variables' => array('data' => null),
      'file'=>'templates/theme.inc',
    )
  );
}

function dpi_log($log_name, $action, $message, $variables=array(),$id=NULL, $severity=WATCHDOG_NOTICE, $uid=NULL, $keep_backtrace=FALSE){
  if (module_exists('dpilog')){
    _dpilog_log($log_name, $action, $message,$variables,$id, $severity, $uid,$keep_backtrace);
  }
}

/**
 * Check if an URL is valid and return a 200
 * Return TRUE if so False if not.
 *
 * @param String $url
 *
 * @return Boolean $response
 */
function dpicommons_checkurlresponse($url) {
  $response = TRUE;
  if (!valid_url($url)) {
    $response = FALSE;
  } else {
    // @todo : ajouter la possibilité de limiter les retries sur la requête http
    $request = drupal_http_request($url, array('timeout' => dpi_variable_get('dpicommons_http_request_timeout', 3)));
    if ($request->code != '200') {
      $response = FALSE;
    }
  }
  return $response;
}

/**
 * Get numeric keys of a structured array tree element.
 *
 * @param Array $element
 *   The array to process
 *
 * @return Array
 *   An array containing the numeric keys of the given array
 */
function dpicommons_element_children_numeric($element) {
  return array_filter(array_keys((array) $element), 'dpicommons_element_child_numeric');
}

/**
 * Check if the key is a numeric child.
 */
function dpicommons_element_child_numeric($key) {
  return is_numeric($key);
}
