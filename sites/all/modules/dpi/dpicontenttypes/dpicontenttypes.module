<?php


/**
 * Implements hook_node_info().
 *
 * We use hook_node_info() to define our node content type.
 */
function dpicontenttypes_node_info(){
  return array(
    'article_package'=>array(
      'name'=>t("Article Package"),
        
      'base'=>'article_package',
      'description'=>t('Article package from DPI'),
      'has_title'=>TRUE,  
      'locked' => TRUE,
                
    ),
    'gallery_package'=>array(
          'name'=>t("Gallery Package"),
      
          'base'=>'article_package',
          'description'=>t('Article package from DPI'),
          'has_title'=>TRUE,
          'locked' => TRUE,
      
      ),
      'poll_package'=>array(
          'name'=>t("Poll Package"),
          'base'=>'article_package',
          'description'=>t('Article package from DPI'),
          'has_title'=>TRUE,
          'locked' => TRUE,
      
      ),
  );
  
}




/**
 * Implement hook_form().
 *
 * Drupal needs for us to provide a form that lets the user
 * add content. This is the form that the user will see if
 * they go to node/add/node-example.
 *
 * You can get fancy with this form, or you can just punt
 * and return the default form that node_content will provide.
 */
function article_package_form($node, $form_state) {
  return node_content_form($node, $form_state);
}
function gallery_package_form($node, $form_state) {
  return node_content_form($node, $form_state);
}
function poll_package_form($node, $form_state) {
  return node_content_form($node, $form_state);
}



//@todo: documenter cette partie on fait l'alter uniquement pour fournir un build mode suplÃ©mentaire...
/**
 * Implements hook_entity_info_alter().
 *
 * We need to modify the default node entity info by adding a new view mode to
 * be used in functions like node_view() or node_build_content().
 */
function dpicontenttypes_entity_info_alter(&$entity_info) {
  // Add our new view mode to the list of view modes...
  $entity_info['node']['view modes']['article_package'] = array(
      'label' => t('Target default'),
      'custom settings' => FALSE,
  );
}


/**
 * Implements hook_ctools_plugin_directory().
 */
function dpicontenttypes_ctools_plugin_directory($module, $plugin) {
	if ($module == 'entityreference' && $plugin=="behavior") {
		return 'plugins/entityreference/' . $plugin;
	}
}
