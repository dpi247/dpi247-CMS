<?php 


function dpidestinations_schema() {
  $schema['dpidestinations_target'] = array (
    'description' => 'The target entity table',
    'fields' => array(
      'targetid' => array(
        'description' => 'Primary key for our table of target',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'machine_name' => array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),
      'label' => array(
        'description' => 'The label of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),

      'description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this target.',
        'object default' => '',
      ),
       
      'view_name' => array(
        'type'=>'varchar',
        'length' => 64,
        'not null' => TRUE
      ),
      'view_display' =>array(
        'type'=>'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'available_targetlayouts' => array(
        'description' => 'Wich target layout are available for this target.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'available_templateoverrides' => array(
        'description' => 'Allow Webmaster to override template logic by choosing a fixed template',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),

      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => ENTITY_CUSTOM,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),

    ),
    'primary key' => array('targetid'),
  );

  $schema['dpidestinations_targetblock'] = array (
    'description' => 'The target entity table',
    'fields' => array(
      'targetblockid' => array(
        'description' => 'Primary key for our table of target',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'target' => array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),
      'did' => array(
        'description' => 'The ctools page manager display id (did)',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),
      'pid' => array(
        'description' => 'The ctools page manager panel id (pid)',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE
      ),

      'node_count_for_targetblockinstance' => array(
        'description' => 'The machine name of the target',
        'type' => 'int',
        'not null' => TRUE
      ),
      'node_count_for_targetblock' => array(
        'description' => 'The machine name of the target',
        'type' => 'int',
        'not null' => TRUE
      ),
      'use_pager' => array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE
      ),

      'offset' => array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE
      ),
      'hide_pager' => array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE
      ),
      'use_split' => array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE
      ),
      'split_delta' => array(
        'description' => 'The machine name of the target',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE
      ),
      'rank_max_value'=>array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The maximum rank value.'
      ),
      'rank_behavior'=> array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE
      ),
      'template_rule'=> array(
        'description' => 'The machine name of the target',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE
      ),

      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => ENTITY_CUSTOM,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),

    ),
    'primary key' => array('targetblockid'),
  );
  /*
   $schema['dpidestinations_destinationvariant'] = array (
     'description' => 'The target entity table',
     'fields' => array(

       'page_manager_handlers_did' => array(
         'description' => 'The machine name of the target',
         'type' => 'varchar',
         'length' => '255',
         'not null' => TRUE
       ),

       'pager_override' => array(
         'description' => 'The machine name of the target',
         'type' => 'varchar',
         'length' => '255',
         'not null' => TRUE
       ),
       'split_flag' => array(
         'description' => 'The machine name of the target',
         'type' => 'varchar',
         'length' => '255',
         'not null' => TRUE
       ),
       'split_number' => array(
         'description' => 'The machine name of the target',
         'type' => 'varchar',
         'length' => '255',
         'not null' => TRUE
       ),
       'split_total' => array(
         'description' => 'The machine name of the target',
         'type' => 'varchar',
         'length' => '255',
         'not null' => TRUE
       ),

       'status' => array(
         'type' => 'int',
         'not null' => TRUE,
         // Set the default to ENTITY_CUSTOM without using the constant as it is
         // not safe to use it at this point.
         'default' => ENTITY_CUSTOM,
         'size' => 'tiny',
         'description' => 'The exportable status of the entity.',
       ),
       'module' => array(
         'description' => 'The name of the providing module if the entity has been defined in code.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => FALSE,
       ),

     ),
     'primary key' => array('targetblockid'),
   );

  */

  return $schema;
}


 function dpidestinations_install(){
   _dpidestinations_variable_set("dpidestinations_targetview_reorder_default",array("targetview_reorder_default","targetview_1"));
   _dpidestinations_variable_set("dpidestinations_virtualrank_delta",30);
   
 }
 function dpidestinations_uninstall(){
   _dpidestinations_variable_del("dpidestinations_targetview_reorder_default");
   _dpidestinations_variable_del("dpidestinations_virtualrank_delta");
   _dpidestinations_variable_del("dpidestinations_available_targetlayouts");
 }
/**
 * Implements hook_field_schema().
 *
 * Defines the database schema of the field, using the format used by the
 * Schema API.
 *
 * The data we will store here is just one 7-character element, even
 * though the widget presents the three portions separately.
 *
 * All implementations of hook_field_schema() must be in the module's
 * .install file.
 *
 * @see http://drupal.org/node/146939
 * @see schemaapi
 * @see hook_field_schema()
 * @ingroup field_example
 */
function dpidestinations_field_schema($field) {
  $columns = array(
      'tid' => array('type' => 'int', 'size' => 'medium', 'not null' => TRUE),
      'target' => array('type' => 'varchar', 'length' => 254, 'not null' => FALSE),
      'layout' => array('type' => 'varchar', 'length' => 254, 'not null' => FALSE),
      'rank' => array('type' => 'int', 'size' => 'medium', 'not null' => FALSE),
      'virtual_rank' => array('type' => 'int',  'size' => 'big','not null' => FALSE),
      
  );
  $indexes = array(
      'tid' => array('tid'),
      'virtual_rank' => array('virtual_rank'),
  );
  $unique_keys=array('unique'=>array('tid','target'));
  
  return array(
      'columns' => $columns,
      'indexes' => $indexes,
      'unique keys'=>$unique_keys,
  );
}

